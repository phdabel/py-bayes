Ponto flutuante (do inglês floating point) ou vírgula flutuante é um formato de representação digital de números reais, que é usada nos computadores.O número é dividido numa mantissa (M) e um expoente (E). O valor representado é obtido pelo produto: M · 2EDesta forma é possível cobrir um largo espectro de números, maximizando o número de bits significativos e consequentemente a precisão da aproximação. Esta forma de representação foi criada por Konrad Zuse para os seus computadores Z1 e Z3.O número de bits alocados para representar a mantissa e o expoente depende da norma utilizada. A maioria dos sistemas que operam com ponto flutuante utilizam representações definidas na norma IEEE 754.A Norma IEEE 754-2008 define os formatos adequados para representar números em ponto flutuante de precisão simples (32 bits) e de precisão dupla (64 bits).O formato de ponto flutuante de precisão simples (32 bits) consiste num bit de sinal (s), 8 bits de expoente (e) e uma mantissa de 23 bits (m). O bit de sinal (s) é 0 (zero) para números positivos e 1 para números negativos. O campo de expoente (e) corresponde à soma de 127 com o expoente de base 2 do número representado. O campo de mantissa (m) corresponde à parte fracionária da mantissa do número representado. Considera-se a sempre a mantissa normalizada entre 1 e 2. Desta forma a sua parte inteira é sempre apenas um bit igual a 1 (um) que não é necessário representar.v = S × M × 2EOnde:S = 1 − 2 × sM = 1.m = 1 + m × 2−23E = e − 127A fração decimal:0,125é representada por: 1/10 + 2/100 + 5/1000. Da mesma forma, a fração binária:0,001tem valor: 0/2 + 0/4 + 1/8. Os dois valores são idênticos, sendo o primeiro escrito na base 10 e o segundo na base 2.As notações com os bits do campo expoente (e) todos a um ou todos a zero são reservadas para valores especiais. O zero é representado com e=0 e m=0. Outros valores de m com e=0 indicam números não normalizados. Nestas casos considera-se a mantissa entre 0 e 1.Muitas frações decimais não podem ser representadas exatamente como frações binárias finitas. Por consequência, diversos números armazenados na máquina em váriaveis do tipo ponto flutuante (float, double, real) são apenas aproximações.Considere, por exemplo, a fração 1/3. Uma aproximação decimal seria:e assim por diante. Não existe uma fração finita capaz de resultar em exatamente 1/3.Um outro exemplo interessante é a fração 1/10. Em muitas linguagens de programação, apesar de rotinas de impressão mostrar o valor 0,100000, se exibirmos o número com maior precisão (por exemplo, 20 casas decimais), veremos que o valor real armazendo será algo aproximado de:0,10000000149001612000 (o valor pode mudar segundo o hardware e a linguagem utilizada).Assim, ao programar é preciso ter cuidado com números em ponto flutuante, em especial com acumuladores e comparações.